/* Pipeline expects Jobs parameters and those automatically added as Env Vars:
     - instance_id (String)
     - instance_type (String)
     - security_group_id (String)
     - iam_profile (String)
     - s3_bucket_name (String)
     - ssh_key_name (String) -- optional debug field
     - subnet_id (String)
     - terminate_ec2_instance (String)
     - ami_version (String)
     - vht_in (String)
     - AWS_DEFAULT_REGION (String)
*/

pipeline {
    // any Unix-like agent (including macOS)
    // The node needs:
    // - python3
    // - tar
    // Please change the agent block for your needs (if maybe it is K8S or Docker node)
    agent { label 'YOUR_NODE_LABEL' }
    // Optional -- enables timestamp on output
    options {
        timestamps()
    }
    // Mandatory: Set desired AWS_DEFAULT_REGION
    // Do not change: gh_workspace
    // IMPORTANT: If Job parameters are not automatically added as Env Vars, please add them here.
    environment {
        AWS_DEFAULT_REGION      = "${params.AWS_DEFAULT_REGION}"
        gh_workspace            = "${WORKSPACE}"
    }
    stages {
        stage('Checking out SCM') {
            steps {
                // Checkout VHT repo, which Jenkins need to install VHT Python module.
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [
                        [$class: 'CheckoutOption', timeout: 5],
                        [$class: 'CloneOption', depth: 1, honorRefspec: true, noTags: true, reference: '', shallow: true, timeout: 5],
                        [$class: 'RelativeTargetDirectory', relativeTargetDir: 'vht']
                    ],
                    userRemoteConfigs: [[url: 'https://github.com/ARM-software/VHT.git']]
                ])

                // Checkout VHT-AMI repo, which Jenkins fetchs the VHT python script
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'v2']],
                    extensions: [
                        [$class: 'CheckoutOption', timeout: 5],
                        [$class: 'CloneOption', depth: 1, honorRefspec: true, noTags: true, reference: '', shallow: true, timeout: 5],
                        [$class: 'RelativeTargetDirectory', relativeTargetDir: 'vht-ami']
                    ],
                    userRemoteConfigs: [[url: 'https://github.com/ARM-software/VHT-AMI.git']]
                ])
            }
        }
        // Tar the ${vht_in} folder to be sent to the AWS EC2 instance
        stage('Setup VHT.tar') {
            steps {
                sh("tar -cf vht.tar ${vht_in}")
                sh("tar -tvf vht.tar")
            }
        }
        // Run VHT python code
        stage('Run VHT') {
            steps {
                // Please install Jenkins plugin: https://plugins.jenkins.io/aws-credentials/
                // Then, create a AWS Credential in order to inject in the block below.
                // In this example, we have created a AWS credential called `VHT_IAM_User`.
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'VHT_IAM_User', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    // Please install Jenkins plugin: https://plugins.jenkins.io/pyenv-pipeline/
                    // On Debian/Ubuntu systems, you need to install the python3-venv
                    withPythonEnv('python3') {
                        dir('vht/infrastructure/python_resources') {
                            sh('python3 -m pip install .')
                        }
                        dir('vht-ami') {
                            sh('python3 vht_github_action.py')
                        }
                    }
                }
            }
        }
    }
    // Remove it if you running in a short-live container.
    post {
        always { cleanWs() }
    }
}
