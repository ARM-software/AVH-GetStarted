# This is a basic workflow to help you get started with Actions on CMSIS projects
# See also https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/infrastructure-for-continuous-integration-tests

name: Arm Virtual Hardware Self-hosted Runner example
# See also https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# To allow you to run this workflow manually from the GitHub Actions tab add
  workflow_dispatch:

# Build/run with supplied Python script

jobs:
  self_hosted_runner_demo:
    runs-on: self-hosted
    env:
      working-directory: ${{ github.workspace }}/basic/
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Verify what has been cloned
        run:  echo "${{ github.repository }} has been cloned."
        
      - name: Install Python packages
        run:  pip install -r requirements.txt
        working-directory: ${{env.working-directory}}
        
      - name: Build example test
        run:  ./build.py -t debug cbuild
        working-directory: ${{env.working-directory}}

      - name: Run example test
        run:  ./build.py -t debug vht
        working-directory: ${{env.working-directory}}
        
      - name: Publish test results
        uses: mikepenz/action-junit-report@v2
        with:
          check_name: "Test result"
          report_paths: basic/basic-*.xunit
