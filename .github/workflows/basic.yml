# This is a basic workflow to help you get started with Actions on CMSIS projects
# See also https://community.arm.com/developer/tools-software/tools/b/tools-software-ides-blog/posts/infrastructure-for-continuous-integration-tests
#
# The repository needs to provide the following secrets
# - AWS_ACCESS_KEY_ID       The id of the access key.
# - AWS_ACCESS_KEY_SECRET   The access key secret.
# - AWS_DEFAULT_REGION      The data center region to be used.
# - AWS_S3_BUCKET           The id of the S3 storage bucket to be used to data exchange.
# - AWS_AMI_ID              The id of the Amazon Machine Image (AMI) to be used.
# - AWS_IAM_PROFILE         The IAM profile to be used.
# - AWS_SECURITY_GROUP_ID   The id of the security group to add the EC2 instance to.
# - AWS_SUBNET_ID           The id of the network subnet to connect the EC2 instance to.

name: Arm Virtual Hardware basic example - github hosted - remote AWS via GH plugin

on:
  push:
    branches: [ main ]
    paths:
      - .github/workflows/basic.yml
      - basic/**/*
      - requirements.txt
  pull_request:
    branches: [ main ]
    paths:
      - .github/workflows/basic.yml
      - basic/**/*
      - requirements.txt

# To allow you to run this workflow manually from the GitHub Actions tab add
  workflow_dispatch:

env:
  # Set AWS_INSTANCE_ID to use a pre-existing instance instead of create ad-hoc ones.
  AWS_INSTANCE_ID: ''
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
jobs:
  ci_test:
    runs-on: ubuntu-latest
    outputs:
      vhtresult: ${{ steps.vht.conclusion }}
      testbadge: ${{ steps.result.outputs.badge }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Install Python packages
      run: pip install -r requirements.txt

    - uses: Arm-Software/VHT-AMI@master
      id: vht
      with:
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        ami_id: ${{ secrets.AWS_AMI_ID }}
        aws_region: ${{ secrets.AWS_DEFAULT_REGION }}
        iam_role: ${{ secrets.AWS_IAM_PROFILE }}
        instance_id: ${{ env.AWS_INSTANCE_ID }}
        instance_type: t2.micro
        s3_bucket_name: ${{ secrets.AWS_S3_BUCKET }}
        secret_access_key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        security_group_id: ${{ secrets.AWS_SECURITY_GROUP_ID }}
        session_token: ''
        ssh_key_name: common
        subnet_id: ${{ secrets.AWS_SUBNET_ID }}
        terminate_ec2_instance: 'true'
        vht_in: ./basic/

    - name: Fetch results from VHT
      id: result
      run: |
          tar xvzf out.tar
          cp ./home/ubuntu/vhtwork/out/basic.axf basic/
          cp ./home/ubuntu/vhtwork/out/basic.axf.stdio basic/vht-$(date +'%Y%m%d%H%M%S').log
          cd basic
          ./build.py --verbose -t debug report

    - name: Archive results
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: |
          basic/basic.axf
          basic/vht-*.log
          basic/basic-*.xunit
        retention-days: 1
        if-no-files-found: error
      if: always()

    - name: Publish test results
      uses: mikepenz/action-junit-report@v2
      with:
        check_name: "Test results"
        report_paths: basic/basic-*.xunit

  badge:
    if: always() && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: ci_test
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: badges

      - name: Update badge
        run: |
          mkdir -p .github/badges
          cd .github/badges
          rm -f basic.yml.*.svg
          if [[ "${{ needs.ci_test.outputs.vhtresult }}" == "success" ]]; then
            cp vht-completed.svg basic.yml.vht.svg
          else
            cp vht-failed.svg basic.yml.vht.svg
          fi
          curl -o basic.yml.unittest.svg https://img.shields.io/badge/${{ needs.ci_test.outputs.testbadge }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add basic.yml.*.svg
          if git commit -m "Update badges for workflow basic.yml"; then
            git push
          fi
